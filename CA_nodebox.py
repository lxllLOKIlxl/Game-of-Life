import streamlit as st
import numpy as np
import matplotlib.pyplot as plt

GRID_SIZE = 30
CELL_SIZE = 10

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≥—Ä–∏
if "grid" not in st.session_state:
    st.session_state.grid = np.zeros((GRID_SIZE, GRID_SIZE), dtype=int)
if "running" not in st.session_state:
    st.session_state.running = False

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—É—Å—ñ–¥—ñ–≤
def neighbours(x, y, grid):
    O = [(x+1, y), (x-1, y), (x, y+1), (x, y-1), (x+1, y+1), (x-1, y-1), (x-1, y+1), (x+1, y-1)]
    return sum(grid[i % GRID_SIZE, j % GRID_SIZE] for i, j in O if 0 <= i < GRID_SIZE and 0 <= j < GRID_SIZE)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è –∫–ª—ñ—Ç–∏–Ω–∏
def exist(x, y, grid):
    return grid[x, y] == 1

# –§—É–Ω–∫—Ü—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–∫–æ–ª—ñ–Ω—å
def update_grid(grid):
    new_grid = grid.copy()
    
    for x in range(GRID_SIZE):
        for y in range(GRID_SIZE):
            N = neighbours(x, y, grid)
            if grid[x, y] == 1 and (N < 2 or N > 3):  # –ó–∞–≥–∏–±–µ–ª—å
                new_grid[x, y] = 0
            elif grid[x, y] == 0 and N == 3:  # –ù–∞—Ä–æ–¥–∂–µ–Ω–Ω—è
                new_grid[x, y] = 1
    
    return new_grid

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö –∫–ª—ñ—Ç–∏–Ω
def add_cell(x, y):
    if 0 <= x < GRID_SIZE and 0 <= y < GRID_SIZE:
        st.session_state.grid[x, y] = 1

# UI Streamlit
st.title("–ì—Ä–∞ '–ñ–∏—Ç—Ç—è' –≤ Streamlit")

# –ú–∞–ª—é–≤–∞–Ω–Ω—è –≤—Ä—É—á–Ω—É
st.write("**–í–∏–±–µ—Ä–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –¥–ª—è –∫–ª—ñ—Ç–∏–Ω–∏:**")
row = st.slider("–†—è–¥–æ–∫", 0, GRID_SIZE-1, format="Row: %d")
col = st.slider("–°—Ç–æ–≤–ø–µ—Ü—å", 0, GRID_SIZE-1, format="Column: %d")
if st.button("–î–æ–¥–∞—Ç–∏ –∫–ª—ñ—Ç–∏–Ω—É"):
    add_cell(row, col)

# **–ö—Ä—É–≥–ª–∞ –∫–Ω–æ–ø–∫–∞ "–¢–∞–ø–∞–ª–∫–∞" –¥–ª—è —Å—Ç–∞—Ä—Ç—É**
if st.button("üîµ –¢–∞–ø–∞–ª–∫–∞ (–°—Ç–∞—Ä—Ç/–°—Ç–æ–ø)"):
    st.session_state.running = not st.session_state.running

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –ø–æ–ª—è
if st.button("–û—á–∏—Å—Ç–∏—Ç–∏ –ø–æ–ª–µ"):
    st.session_state.grid = np.zeros((GRID_SIZE, GRID_SIZE), dtype=int)

# –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ–∫–æ–ª—ñ–Ω—å —É —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ
if st.session_state.running:
    st.session_state.grid = update_grid(st.session_state.grid)

# **–í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è –≥—Ä–∏**
fig, ax = plt.subplots(figsize=(6, 6))

ax.set_xticks(range(0, GRID_SIZE, CELL_SIZE))
ax.set_yticks(range(0, GRID_SIZE, CELL_SIZE))
ax.grid(True, color="white", linewidth=0.5)

ax.imshow(st.session_state.grid, cmap="inferno", interpolation="nearest")
ax.set_title("–ñ–∏–≤—ñ –∫–ª—ñ—Ç–∏–Ω–∏")
ax.axis("off")

st.pyplot(fig)
